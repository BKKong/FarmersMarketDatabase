group 'org.kbiying'
version '1.0-SNAPSHOT'

apply plugin: 'application'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'net.ltgt.apt'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.3"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.12"
    }
}

def grpcVersion = '1.7.0'
def truthVersion = '0.36'

dependencies {
    compile "com.google.api.grpc:proto-google-common-protos:0.1.22"
    compile "commons-cli:commons-cli:1.4"
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "org.xerial:sqlite-jdbc:3.20.1"
    compileOnly "com.google.auto.value:auto-value:1.5.2"
    apt "com.google.auto.value:auto-value:1.5.2"

    testCompile "com.google.truth:truth:${truthVersion}"
    testCompile "com.google.truth.extensions:truth-java8-extension:${truthVersion}"
    testCompile "com.google.truth.extensions:truth-proto-extension:${truthVersion}"
    testCompile "io.grpc:grpc-testing:${grpcVersion}"
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:1.9.5"
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.4.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/apt/main'
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

startScripts.enabled = false

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}

task farmersMarketServer(type: CreateStartScripts) {
    mainClassName = 'org.kbiying.farmersmarket.server.FarmersMarketServer'
    applicationName = 'farmers-market-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

task farmersMarketClient(type: CreateStartScripts) {
    mainClassName = 'org.kbiying.farmersmarket.client.FarmersMarketClient'
    applicationName = 'farmers-market-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into('bin') {
    from(farmersMarketServer)
    from(farmersMarketClient)
    fileMode = 0755
}
